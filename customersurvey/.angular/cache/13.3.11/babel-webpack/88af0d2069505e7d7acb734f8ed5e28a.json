{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nexport let MessageService = /*#__PURE__*/(() => {\n  class MessageService {\n    constructor(translate) {\n      this.translate = translate;\n    }\n    /*** Toast Messages ***/\n    toast(type, title) {\n      const toast = swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        showCloseButton: true,\n        animation: false,\n        timer: 5000\n      });\n      toast.fire({\n        icon: type,\n        title: `${this.translate.instant(title)}`\n      });\n    }\n    /*** Alert Messages ***/\n    alert(type, title, text) {\n      swal.fire({\n        icon: type,\n        title: `${this.translate.instant(title)}`,\n        text: text ? `${this.translate.instant(text)}` : '',\n        confirmButtonText: 'OK'\n      });\n    }\n    /*** confirmation dialog box (returns a promise) ***/\n    confirm(title, customClass, text, removeHeader) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const result = yield swal.fire({\n          title: removeHeader ? `${title}?` : `${this.translate.instant('Are you sure you want to')} ${this.translate.instant(title)}?`,\n          text,\n          customClass: {\n            container: customClass\n          },\n          imageUrl: '/assets/images/cancel-icon.svg',\n          showCloseButton: true,\n          showCancelButton: true,\n          confirmButtonText: this.translate.instant('Confirm'),\n          cancelButtonText: removeHeader ? this.translate.instant('Cancel') : this.translate.instant('Cancel'),\n          animation: false,\n          allowOutsideClick: false,\n          allowEscapeKey: true\n        });\n        return result;\n      });\n    }\n    /*** Alert Messages ***/\n    preDeliveryBox() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const result = yield swal.fire({\n          title: `${this.translate.instant('Select delivery type to send documents')}`,\n          showCancelButton: true,\n          cancelButtonText: this.translate.instant('Pre Delivery'),\n          confirmButtonText: this.translate.instant('Post Delivery')\n        });\n        return result;\n      });\n    }\n  }\n  MessageService.ɵfac = function MessageService_Factory(t) {\n    return new (t || MessageService)(i0.ɵɵinject(i1.TranslateService));\n  };\n  MessageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MessageService,\n    factory: MessageService.ɵfac,\n    providedIn: 'root'\n  });\n  return MessageService;\n})();","map":null,"metadata":{},"sourceType":"module"}