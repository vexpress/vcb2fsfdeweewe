{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { MatAccordion } from '@angular/material/expansion';\nimport { ApiUrl } from 'src/app/core/apiUrl';\nlet ManageDocConfigComponent = class ManageDocConfigComponent {\n  constructor(formBuilder, router, route, message, http) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.route = route;\n    this.message = message;\n    this.http = http;\n    this.panelOpenState = false;\n    this.configForm = new FormGroup({});\n    this.isSubmitted = false;\n    this.isLoading = false;\n    this.advisors = [];\n    this.tabsArray = [];\n    this.sectionsArray = [];\n    this.subSectionsArray = [];\n    this.checklistArray = [];\n    this.consultants = [];\n    this.tabs = [{\n      heading: 'Tab 1 Heading',\n      isOpen: false,\n      content: 'Content for Tab 1. Lorem ipsum dolor sit amet, consetetur sadipscing elitr...'\n    }, {\n      heading: 'Tab 2 Heading',\n      isOpen: false,\n      content: 'Content for Tab 2. At vero eos et accusam et justo duo dolores et ea rebum.'\n    }\n    // Add more tabs as needed\n    ];\n\n    this.createconfigForm();\n  }\n  ngOnInit() {\n    this.getDocuments();\n  }\n  /*** Get CheckList Documents ***/\n  getDocuments() {\n    this.http.getData(ApiUrl.admin.getDocuments).subscribe(response => {\n      if (!!response) {\n        this.docJson = response.result ? JSON.parse(response.result) : [];\n        console.log(\"docJson\", this.docJson);\n        this.docJson.forEach((tabELe, tindex) => {\n          if (tindex !== 0) this.addTabItem();\n          tabELe.Fields.forEach((fieldEle, fIndex) => {\n            if (fIndex !== 0) this.addSectionItem(tindex);\n            fieldEle.Questions.forEach((quesEle, qIndex) => {\n              if (qIndex !== 0) this.addCheckItem(tindex, fIndex);\n            });\n          });\n        });\n        setTimeout(() => {\n          this.configForm.patchValue({\n            tabsList: this.docJson\n          });\n        }, 100);\n      }\n    });\n  }\n  get dForm() {\n    return this.configForm.controls;\n  }\n  trim(key) {\n    this.configForm.controls[key].patchValue(this.dForm[key].value.trim());\n  }\n  createconfigForm() {\n    this.configForm = this.formBuilder.group({\n      tabsList: this.formBuilder.array([this.createTab()])\n    });\n  }\n  getTablist() {\n    return this.configForm.get('tabsList');\n  }\n  getFields(index) {\n    let tab = this.getTablist();\n    return tab.controls[index].get('Fields');\n  }\n  getChecklist(index, index2) {\n    let tab = this.getFields(index);\n    return tab.controls[index2].get('Questions');\n  }\n  addTabItem() {\n    const checkArray = this.getTablist();\n    checkArray.push(this.createTab());\n  }\n  removeTab(i) {\n    const checkArray = this.getTablist();\n    checkArray.removeAt(i);\n  }\n  addSectionItem(i) {\n    const checkArray = this.getFields(i);\n    checkArray.push(this.createSection());\n  }\n  removeSection(i, j) {\n    const checkArray = this.getFields(i);\n    checkArray.removeAt(j);\n  }\n  addCheckItem(i, j) {\n    const checkArray = this.getChecklist(i, j);\n    checkArray.push(this.createCheck());\n  }\n  removeCheckItem(i, j, k) {\n    const checkArray = this.getChecklist(i, j);\n    checkArray.removeAt(k);\n  }\n  createCheck() {\n    return this.formBuilder.group({\n      Label: [''],\n      Name: [''],\n      Answer: [null],\n      Type: ['checkbox'],\n      MoveToFollowUp: [false],\n      Links: [[]],\n      Documents: [[]],\n      IsRequired: [true],\n      IsAddLink: [true],\n      IsAddDoc: [true]\n    });\n  }\n  createTab() {\n    return this.formBuilder.group({\n      Label: [''],\n      AllocatedTime: [''],\n      Info: [''],\n      Name: [''],\n      isOpen: [false],\n      Questions: [null],\n      Fields: this.formBuilder.array([this.createSection()])\n    });\n  }\n  createSection() {\n    return this.formBuilder.group({\n      Label: [''],\n      Name: [''],\n      Answer: [null],\n      Type: [null],\n      Questions: this.formBuilder.array([this.createCheck()])\n      //  subFields: this.formBuilder.array([this.createSubSection()]),\n    });\n  }\n\n  createSubSection() {\n    return this.formBuilder.group({\n      subSectionName: ['', Validators.required],\n      Questions: this.formBuilder.array([this.createCheck()])\n    });\n  }\n  /*** Submit Form ***/\n  onSubmit() {\n    this.isSubmitted = true;\n    if (!this.configForm.valid) {\n      setTimeout(() => {\n        this.isSubmitted = false;\n      }, 20000);\n      return;\n    }\n    const submitData = this.configForm.value;\n    submitData.tabsList.forEach((element, tindex) => {\n      element.Name = element.Name ? element.Name : 'tab_' + element.Label.replace(/\\s+/g, '').substring(0, 3) + '_' + tindex;\n      element.Fields.forEach((fieldElement, fIndex) => {\n        fieldElement.Name = fieldElement.Name ? fieldElement.Name : 'sec_' + fieldElement.Label.replace(/\\s+/g, '').substring(0, 3) + '_' + fIndex;\n        fieldElement.Questions.forEach((questionElement, index) => {\n          questionElement.Name = questionElement.Name ? questionElement.Name : 'qest_' + questionElement.Label.replace(/\\s+/g, '').substring(0, 3) + '_' + index;\n        });\n      });\n    });\n    this.isLoading = true;\n    this.http.postData(ApiUrl.admin.managechecklist, submitData.tabsList).subscribe(response => {\n      this.isLoading = false;\n      if (!!response) {\n        this.message.toast('success', response.message);\n        this.configForm.reset();\n        this.isSubmitted = false;\n        this.router.navigate(['/admin/manage-documents']);\n      }\n    }, err => {\n      this.isLoading = false;\n    });\n  }\n  onAccordionChange(e, tabIndex) {\n    this.tabs[tabIndex].isOpen = e.detail.open;\n  }\n};\n__decorate([ViewChild(MatAccordion)], ManageDocConfigComponent.prototype, \"accordion\", void 0);\nManageDocConfigComponent = __decorate([Component({\n  selector: 'app-manage-doc-config',\n  templateUrl: './manage-doc-config.component.html',\n  styleUrls: ['./manage-doc-config.component.scss']\n})], ManageDocConfigComponent);\nexport { ManageDocConfigComponent };","map":null,"metadata":{},"sourceType":"module"}