{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nexport let LanguageService = /*#__PURE__*/(() => {\n  class LanguageService {\n    constructor(translate) {\n      this.translate = translate;\n      this.languagesSubject = new BehaviorSubject('en');\n      const currentLanguage = localStorage.getItem('lang') || this.translate.getBrowserLang();\n      this.languagesSubject = new BehaviorSubject(currentLanguage);\n      this.setLanguage(currentLanguage);\n    }\n    /*** Set user language local storage ***/\n\n\n    setLanguage(lang) {\n      localStorage.setItem('lang', lang);\n      this.languagesSubject.next(lang);\n      this.translate.use(lang);\n    }\n    /*** Set get current language ***/\n\n\n    getCurrentlanguage() {\n      return this.languagesSubject.asObservable();\n    }\n\n  }\n\n  LanguageService.ɵfac = function LanguageService_Factory(t) {\n    return new (t || LanguageService)(i0.ɵɵinject(i1.TranslateService));\n  };\n\n  LanguageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LanguageService,\n    factory: LanguageService.ɵfac,\n    providedIn: 'root'\n  });\n  return LanguageService;\n})();","map":null,"metadata":{},"sourceType":"module"}