{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ApiUrl } from 'src/app/core/apiUrl';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/message/message.service\";\nimport * as i4 from \"src/app/services/http/http.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../layout/dealer/common/header/header.component\";\nimport * as i7 from \"@porsche-design-system/components-angular\";\nimport * as i8 from \"@ngx-translate/core\";\n\nfunction ChangePasswordComponent_app_header_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-header\");\n  }\n}\n\nexport let ChangePasswordComponent = /*#__PURE__*/(() => {\n  class ChangePasswordComponent {\n    constructor(formBuilder, router, message, http) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.message = message;\n      this.http = http;\n      this.isSubmitted = false;\n      this.isLoading = false;\n      this.isAdmin = false;\n      this.createResetForm();\n    }\n\n    ngOnInit() {\n      if (this.router.url.includes('/admin')) {\n        this.isAdmin = true;\n      }\n    }\n    /*** Intialize Form ***/\n\n\n    createResetForm() {\n      const pattern1 = new RegExp(/^(?=.*\\d)(?=.*[A-Z]).{8,15}$/);\n      this.changePasswordForm = this.formBuilder.group({\n        oldPassword: ['', Validators.required],\n        password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(15), Validators.pattern(pattern1)]],\n        confirmPassword: ['', Validators.required]\n      }, {\n        validator: this.checkPasswords\n      });\n    }\n    /*** Validation for password and Confirm password ***/\n\n\n    checkPasswords(group) {\n      const pass = group.controls.password.value;\n      const confirmPass = group.controls.confirmPassword.value;\n\n      if (pass && confirmPass) {\n        return pass === confirmPass ? null : {\n          notSame: true\n        };\n      }\n\n      return null;\n    }\n    /*** Submit Form ***/\n\n\n    onSubmit() {\n      this.isSubmitted = true;\n\n      if (!this.changePasswordForm.valid) {\n        setTimeout(() => {\n          this.isSubmitted = false;\n        }, 20000);\n        return;\n      }\n\n      const params = Object.assign({}, this.changePasswordForm.value);\n      delete params.confirmPassword;\n      this.isLoading = true;\n      const url = this.isAdmin ? ApiUrl.admin.changePassword : ApiUrl.auth.changePassword;\n      this.http.postData(url, params).subscribe(response => {\n        this.isLoading = false;\n\n        if (!!response) {\n          this.message.toast('success', response.message);\n\n          if (this.isAdmin) {\n            this.router.navigate(['admin/all-dealers']);\n          } else {\n            this.router.navigate(['']);\n          }\n        }\n      }, err => {\n        this.isLoading = false;\n      });\n    }\n\n  }\n\n  ChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) {\n    return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.HttpService));\n  };\n\n  ChangePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChangePasswordComponent,\n    selectors: [[\"app-change-password\"]],\n    decls: 49,\n    vars: 51,\n    consts: [[4, \"ngIf\"], [1, \"delivery-dashboard\"], [\"width\", \"extended\", 1, \"hydrated\", \"p-content-wrapper\"], [3, \"size\"], [\"novalidate\", \"novalidate\", 1, \"forgot-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"last\"], [1, \"form-grid-item-container\", \"p-flex\", \"hydrated\"], [1, \"form-grid-item\", \"p-flex__item\", \"p-flex__item--width-full\", \"hydrated\", 3, \"width\"], [1, \"hydrated\", 3, \"message\", \"state\"], [\"slot\", \"label\"], [\"type\", \"password\", \"name\", \"oldPassword\", \"required\", \"\", \"formControlName\", \"oldPassword\", 3, \"keyup\"], [1, \"form-row-spacing\", \"form-grid-item\", \"p-flex__item\", \"p-flex__item--width-full\", \"hydrated\", 3, \"width\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"formControlName\", \"password\", 3, \"keyup\"], [\"type\", \"password\", \"name\", \"confirmPassword\", \"required\", \"\", \"formControlName\", \"confirmPassword\", 3, \"keyup\"], [1, \"btn-box\"], [\"routerLink\", \"/\", 3, \"icon\", \"variant\"], [\"type\", \"submit\", \"variant\", \"primary\", 3, \"loading\"]],\n    template: function ChangePasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ChangePasswordComponent_app_header_0_Template, 1, 0, \"app-header\", 0);\n        i0.ɵɵelementStart(1, \"section\", 1)(2, \"p-content-wrapper\", 2)(3, \"p-grid\")(4, \"p-grid-item\", 3)(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function ChangePasswordComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"h2\");\n        i0.ɵɵtext(7);\n        i0.ɵɵpipe(8, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10);\n        i0.ɵɵpipe(11, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"p\", 5);\n        i0.ɵɵtext(13);\n        i0.ɵɵpipe(14, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p-flex\", 6)(16, \"p-flex-item\", 7)(17, \"p-text-field-wrapper\", 8);\n        i0.ɵɵpipe(18, \"translate\");\n        i0.ɵɵelementStart(19, \"span\", 9);\n        i0.ɵɵtext(20);\n        i0.ɵɵpipe(21, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"input\", 10);\n        i0.ɵɵlistener(\"keyup\", function ChangePasswordComponent_Template_input_keyup_22_listener($event) {\n          return $event.keyCode === 13 && ctx.onSubmit();\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(23, \"p-flex\", 6)(24, \"p-flex-item\", 11)(25, \"p-text-field-wrapper\", 8);\n        i0.ɵɵpipe(26, \"translate\");\n        i0.ɵɵpipe(27, \"translate\");\n        i0.ɵɵpipe(28, \"translate\");\n        i0.ɵɵelementStart(29, \"span\", 9);\n        i0.ɵɵtext(30);\n        i0.ɵɵpipe(31, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"input\", 12);\n        i0.ɵɵlistener(\"keyup\", function ChangePasswordComponent_Template_input_keyup_32_listener($event) {\n          return $event.keyCode === 13 && ctx.onSubmit();\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(33, \"p-flex\", 6)(34, \"p-flex-item\", 11)(35, \"p-text-field-wrapper\", 8);\n        i0.ɵɵpipe(36, \"translate\");\n        i0.ɵɵpipe(37, \"translate\");\n        i0.ɵɵelementStart(38, \"span\", 9);\n        i0.ɵɵtext(39);\n        i0.ɵɵpipe(40, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"input\", 13);\n        i0.ɵɵlistener(\"keyup\", function ChangePasswordComponent_Template_input_keyup_41_listener($event) {\n          return $event.keyCode === 13 && ctx.onSubmit();\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(42, \"div\", 14)(43, \"p-button\", 15);\n        i0.ɵɵtext(44);\n        i0.ɵɵpipe(45, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"p-button\", 16);\n        i0.ɵɵtext(47);\n        i0.ɵɵpipe(48, \"translate\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAdmin);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"size\", 12);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.changePasswordForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 23, \"Change Password\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 25, \"Enter your current password to change and set a new password.\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(14, 27, \"Mandatory fields are marked with an asterisk\"), \" (). \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"width\", \"full\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"message\", ctx.isSubmitted && ctx.changePasswordForm.controls.oldPassword.errors ? i0.ɵɵpipeBind1(18, 29, \"Please enter your old Password.\") : \"\")(\"state\", ctx.isSubmitted && ctx.changePasswordForm.controls.oldPassword.errors ? \"error\" : \"none\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(21, 31, \"Current Password\"), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"width\", \"full\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"message\", ctx.isSubmitted && ((ctx.changePasswordForm.controls.password.errors == null ? null : ctx.changePasswordForm.controls.password.errors.minlength) || (ctx.changePasswordForm.controls.password.errors == null ? null : ctx.changePasswordForm.controls.password.errors.maxlength)) ? i0.ɵɵpipeBind1(26, 33, \"Password length should be 8-15 digits.\") : ctx.isSubmitted && (ctx.changePasswordForm.controls.password.errors == null ? null : ctx.changePasswordForm.controls.password.errors.pattern) ? i0.ɵɵpipeBind1(27, 35, \"Password must have 1 Uppercase and 1 numeric character.\") : i0.ɵɵpipeBind1(28, 37, \"Please enter your new password.\"))(\"state\", ctx.isSubmitted && ctx.changePasswordForm.controls.password.errors ? \"error\" : \"none\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(31, 39, \"New Password\"), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"width\", \"full\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"message\", ctx.isSubmitted && ctx.changePasswordForm.hasError(\"notSame\") ? i0.ɵɵpipeBind1(36, 41, \"Password not matched.\") : i0.ɵɵpipeBind1(37, 43, \"Please confim your password.\"))(\"state\", ctx.isSubmitted && (ctx.changePasswordForm.controls.confirmPassword.errors || ctx.changePasswordForm.hasError(\"notSame\")) ? \"error\" : \"none\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(40, 45, \"Confirm Password\"), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"icon\", \"close\")(\"variant\", \"tertiary\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(45, 47, \"Cancel\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"loading\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(48, 49, \"Change Password\"), \" \");\n      }\n    },\n    directives: [i5.NgIf, i6.HeaderComponent, i7.PContentWrapper, i7.PGrid, i7.PGridItem, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i7.PFlex, i7.PFlexItem, i7.PTextFieldWrapper, i1.DefaultValueAccessor, i1.RequiredValidator, i1.NgControlStatus, i1.FormControlName, i7.PButton, i2.RouterLink],\n    pipes: [i8.TranslatePipe],\n    styles: [\".forgot-form[_ngcontent-%COMP%]{width:100%;max-width:633px;margin:60px auto}.forgot-form[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-bottom:0}.forgot-form[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{width:100%;margin:0}.forgot-form[_ngcontent-%COMP%]   p.last[_ngcontent-%COMP%]{margin-bottom:40px}.forgot-form[_ngcontent-%COMP%]   .btn-box[_ngcontent-%COMP%]{width:100%;display:flex;margin:40px 0}.forgot-form[_ngcontent-%COMP%]   .btn-box[_ngcontent-%COMP%]   p-button[_ngcontent-%COMP%]:first-child{margin-right:16px}\"]\n  });\n  return ChangePasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}