{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { ForgetComponent } from './authorization/forget/forget.component';\nimport { ChangePasswordComponent } from './authorization/change-password/change-password.component';\nimport { LoginComponent } from './authorization/login/login.component';\nimport { ResetPasswordComponent } from './authorization/reset-password/reset-password.component';\nimport { AuthGuard } from './core/guards/auth/auth.guard';\nimport { LoginGuard } from './core/guards/login/login.guard';\nimport { AdminGuard } from './core/guards/admin/admin.guard';\nimport { PclAuthorizationComponent } from './authorization/pcl-authorization/pcl-authorization.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'admin',\n  loadChildren: () => import('./layout/admin/admin.module').then(m => m.AdminModule),\n  canActivate: [AdminGuard]\n}, {\n  path: 'customer',\n  loadChildren: () => import('./layout/customer/customer.module').then(m => m.CustomerModule)\n}, {\n  path: 'dealer',\n  loadChildren: () => import('./layout/dealer/dealer.module').then(m => m.DealerModule),\n  canActivate: [AuthGuard]\n}, {\n  path: 'login',\n  component: LoginComponent,\n  canActivate: [LoginGuard]\n}, {\n  path: 'pcl-auth',\n  component: PclAuthorizationComponent\n}, {\n  path: 'admin/login',\n  component: LoginComponent,\n  canActivate: [LoginGuard]\n}, {\n  path: 'forgot-password',\n  component: ForgetComponent,\n  canActivate: [LoginGuard]\n}, {\n  path: 'admin/forgot-password',\n  component: ForgetComponent,\n  canActivate: [LoginGuard]\n}, {\n  path: 'change-password',\n  component: ChangePasswordComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'reset-password',\n  component: ResetPasswordComponent,\n  canActivate: [LoginGuard]\n}, {\n  path: 'admin/reset-password',\n  component: ResetPasswordComponent,\n  canActivate: [LoginGuard]\n}, {\n  path: 'set-password',\n  component: ResetPasswordComponent,\n  canActivate: [LoginGuard]\n}, {\n  path: '**',\n  redirectTo: '/'\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {}\n  AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  AppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  AppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[RouterModule.forRoot(routes)], RouterModule]\n  });\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}