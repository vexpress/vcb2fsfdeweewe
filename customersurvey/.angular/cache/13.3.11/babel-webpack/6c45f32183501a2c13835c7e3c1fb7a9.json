{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { ApiUrl } from 'src/app/core/apiUrl';\nimport { Patterns } from 'src/app/shared/models/patterns.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/user/user.service\";\nimport * as i4 from \"src/app/services/message/message.service\";\nimport * as i5 from \"src/app/services/http/http.service\";\nimport * as i6 from \"@porsche-design-system/components-angular\";\nimport * as i7 from \"@ngx-translate/core\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, router, user, message, http) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.user = user;\n      this.message = message;\n      this.http = http;\n      this.loginForm = new FormGroup({});\n      this.isSubmitted = false;\n      this.isLoading = false;\n      this.isAdmin = false;\n      this.validationPattern = new Patterns();\n      this.createLoginForm();\n    }\n\n    ngOnInit() {\n      if (this.router.url.indexOf('/admin') > -1) {\n        this.isAdmin = true;\n      }\n    }\n    /*** Intialize Login Form ***/\n\n\n    createLoginForm() {\n      this.loginForm = this.formBuilder.group({\n        userEmail: ['', [Validators.required, Validators.pattern(this.validationPattern.emailPattern)]],\n        password: ['', [Validators.required]]\n      });\n    }\n    /*** Get Login Form Controls ***/\n\n\n    get userForm() {\n      return this.loginForm.controls;\n    }\n    /*** Trim form values ***/\n\n\n    trim(key) {\n      this.loginForm.controls[key].patchValue(this.loginForm.controls[key].value.trim());\n    }\n    /*** Submit Login Form ***/\n\n\n    onSubmit() {\n      this.isSubmitted = true;\n\n      if (!this.loginForm.valid) {\n        setTimeout(() => {\n          this.isSubmitted = false;\n        }, 10000);\n        return;\n      }\n\n      const params = Object.assign({}, this.loginForm.value);\n      this.isLoading = true;\n      const url = ApiUrl.auth.login;\n      this.http.postData(url, params).subscribe(response => {\n        console.log(\"response\", response, !!response);\n        this.isLoading = false;\n\n        if (!!response) {\n          this.user.setUserLocalData(response.result);\n          this.message.toast('success', response.message);\n          console.log(\"this.isAdmin\", this.isAdmin);\n\n          if (response.result.roleInfo.roleGroup === 'Admin') {\n            this.router.navigate(['admin/all-dealers']);\n          } else {\n            this.router.navigate(['']);\n          }\n        }\n      }, err => {\n        this.isLoading = false;\n      });\n    }\n    /*** Navigate to forgot password page ***/\n\n\n    forgotPassword() {\n      if (this.isAdmin) {\n        this.router.navigate(['admin/forgot-password']);\n      } else {\n        this.router.navigate(['/forgot-password']);\n      }\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.MessageService), i0.ɵɵdirectiveInject(i5.HttpService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 37,\n    vars: 31,\n    consts: [[1, \"login\"], [\"width\", \"extended\", 1, \"hydrated\", \"p-content-wrapper\", \"login-wrapper\"], [1, \"example-grid\"], [3, \"size\"], [1, \"black-bg\"], [1, \"img-box\"], [\"src\", \"assets/images/porsche-login.png\", \"alt\", \"prosche\"], [1, \"form-box\"], [\"src\", \"assets/images/Porsche_wordmark_black_rgb.svg\", \"alt\", \"logo\", \"width\", \"200\", 1, \"header_logo\"], [\"novalidate\", \"novalidate\", 1, \"login-form\", 3, \"formGroup\", \"ngSubmit\"], [\"justify-content\", \"center\", 1, \"form-grid-item-container\", \"p-flex\", \"hydrated\"], [1, \"form-grid-item\", \"p-flex__item\", \"p-flex__item--width-full\", \"hydrated\", 3, \"width\"], [1, \"hydrated\", 3, \"label\", \"message\", \"state\"], [\"type\", \"email\", \"name\", \"userEmail\", \"required\", \"required\", \"formControlName\", \"userEmail\", 3, \"keyup\", \"blur\"], [1, \"form-grid-item-container\", \"p-flex\", \"hydrated\"], [1, \"form-row-spacing\", \"form-grid-item\", \"p-flex__item\", \"p-flex__item--width-full\", \"hydrated\", 3, \"width\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"required\", \"formControlName\", \"password\", \"aria-label\", \"Password\", 3, \"keyup\"], [1, \"form-section-spacing\", \"p-flex\", \"hydrated\"], [\"width\", \"{base: 'full}\", 1, \"p-flex__item\", \"p-flex__item--width-full\", \"form-row-spacing\", \"hydrated\"], [\"type\", \"submit\", \"variant\", \"primary\", 1, \"submit-btn\", 3, \"loading\"], [1, \"submit-btn\", \"forget\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"p-content-wrapper\", 1)(2, \"p-grid\", 2)(3, \"p-grid-item\", 3)(4, \"div\", 4)(5, \"div\", 5);\n        i0.ɵɵelement(6, \"img\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"p-grid-item\", 3)(8, \"div\", 7);\n        i0.ɵɵelement(9, \"img\", 8);\n        i0.ɵɵelementStart(10, \"h2\");\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_13_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(14, \"p-flex\", 10)(15, \"p-flex-item\", 11)(16, \"p-text-field-wrapper\", 12);\n        i0.ɵɵpipe(17, \"translate\");\n        i0.ɵɵpipe(18, \"translate\");\n        i0.ɵɵpipe(19, \"translate\");\n        i0.ɵɵelementStart(20, \"input\", 13);\n        i0.ɵɵlistener(\"keyup\", function LoginComponent_Template_input_keyup_20_listener($event) {\n          return $event.keyCode === 13 && ctx.onSubmit();\n        })(\"blur\", function LoginComponent_Template_input_blur_20_listener() {\n          return ctx.trim(\"userEmail\");\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(21, \"p-flex\", 14)(22, \"p-flex-item\", 15)(23, \"p-text-field-wrapper\", 12);\n        i0.ɵɵpipe(24, \"translate\");\n        i0.ɵɵpipe(25, \"translate\");\n        i0.ɵɵelementStart(26, \"input\", 16);\n        i0.ɵɵlistener(\"keyup\", function LoginComponent_Template_input_keyup_26_listener($event) {\n          return $event.keyCode === 13 && ctx.onSubmit();\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(27, \"p-flex\", 17)(28, \"p-flex-item\", 18)(29, \"p-button\", 19);\n        i0.ɵɵtext(30);\n        i0.ɵɵpipe(31, \"translate\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"p-flex\", 17)(33, \"p-flex-item\", 18)(34, \"p-button-pure\", 20);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_p_button_pure_click_34_listener() {\n          return ctx.forgotPassword();\n        });\n        i0.ɵɵtext(35);\n        i0.ɵɵpipe(36, \"translate\");\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"size\", 6);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"size\", 6);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 15, \"Welcome\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"width\", \"full\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(17, 17, \"Porsche ID (email address)\"));\n        i0.ɵɵproperty(\"message\", ctx.isSubmitted && (ctx.userForm.userEmail.errors == null ? null : ctx.userForm.userEmail.errors.pattern) ? i0.ɵɵpipeBind1(18, 19, \"Please enter a valid email.\") : ctx.isSubmitted && (ctx.userForm.userEmail.errors == null ? null : ctx.userForm.userEmail.errors.required) ? i0.ɵɵpipeBind1(19, 21, \"Please enter your email address or Porsche ID\") : \"\")(\"state\", ctx.isSubmitted && ctx.userForm.userEmail.errors ? \"error\" : \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"width\", \"full\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(24, 23, \"Password\"));\n        i0.ɵɵproperty(\"message\", ctx.isSubmitted && ctx.userForm.password.errors ? i0.ɵɵpipeBind1(25, 25, \"Please enter your password.\") : \"\")(\"state\", ctx.isSubmitted && ctx.userForm.password.errors ? \"error\" : \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"loading\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(31, 27, \"Log in\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(36, 29, \"Forgot password\"), \"? \");\n      }\n    },\n    directives: [i6.PContentWrapper, i6.PGrid, i6.PGridItem, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i6.PFlex, i6.PFlexItem, i6.PTextFieldWrapper, i1.DefaultValueAccessor, i1.RequiredValidator, i1.NgControlStatus, i1.FormControlName, i6.PButton, i6.PButtonPure],\n    pipes: [i7.TranslatePipe],\n    styles: [\"\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}